a = 1
a
b = 1 2 3
b = [ 12 3 4]
b = [12 3 4]
b
b = zeroes(3)
x =1:4
x
x=[1:4, 2:5]
x=[1:4; 2:5]
x=matrix (1:6, 2, 3)
x
#try to read data from
us <- read.csv ("../../../../../../../../feeds-repo/samples/DAT_NT_USDSGD_T_LAST_201408.csv",
header=FALSE, sep=";" , nrows = 10000)
#prepare dummy data
set.seed(993)
x <- 1:300
y <- sin(x/20) + rnorm(300,sd=.1)
y[251:255] <- NA
x <- us[,c(1)]
y <- us[,c(2)]
source ("../../../../../../main/com/open/algo/strat/mr/sma.R")
setwd("~/Projects/open-algo/first-repo/src/test/com/open/algo/strat/mr")
#try to read data from
us <- read.csv ("../../../../../../../../feeds-repo/samples/DAT_NT_USDSGD_T_LAST_201408.csv",
header=FALSE, sep=";" , nrows = 10000)
#prepare dummy data
set.seed(993)
x <- 1:300
y <- sin(x/20) + rnorm(300,sd=.1)
y[251:255] <- NA
x <- us[,c(1)]
y <- us[,c(2)]
source ("../../../../../../main/com/open/algo/strat/mr/sma.R")
# x: the vector
# n: the number of samples
# centered: if FALSE, then average current sample and previous (n-1) samples
#           if TRUE, then average symmetrically in past and future. (If n is even, use one more sample from future.)
movingAverage <- function(x, n=1, centered=FALSE) {
if (centered) {
before <- floor  ((n-1)/2)
after  <- ceiling((n-1)/2)
} else {
before <- n-1
after  <- 0
}
# Track the sum and count of number of non-NA items
s     <- rep(0, length(x))
count <- rep(0, length(x))
# Add the centered data
new <- x
# Add to count list wherever there isn't a
count <- count + !is.na(new)
# Now replace NA_s with 0_s and add to total
new[is.na(new)] <- 0
s <- s + new
# Add the data from before
i <- 1
while (i <= before) {
# This is the vector with offset values to add
new   <- c(rep(NA, i), x[1:(length(x)-i)])
count <- count + !is.na(new)
new[is.na(new)] <- 0
s <- s + new
i <- i+1
}
# Add the data from after
i <- 1
while (i <= after) {
# This is the vector with offset values to add
new   <- c(x[(i+1):length(x)], rep(NA, i))
count <- count + !is.na(new)
new[is.na(new)] <- 0
s <- s + new
i <- i+1
}
# return sum divided by count
s/count
}
# Make same plots from before, with thicker lines
plot(x, y, type="l", col=grey(.5))
